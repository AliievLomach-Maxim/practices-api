{
  "swagger": "2.0",
  "info": {
    "title": "Practices - API Documentation",
    "version": "1.0.0",
    "description": "API documentation using Swagger"
  },
  "host": "practices-api.vercel.app",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "description": "Bearer token authorization"
    }
  },
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login",
        "description": "Login",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Login",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "example@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post successfully obtained.",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "token"
                },
                "statusMessage": {
                  "type": "string",
                  "example": "log in successfully"
                },
                "user": {
                  "$ref": "#/definitions/User"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Validation errors"
                },
                "missingFields": {
                  "type": "array",
                  "example": [
                    "missingFields"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Email or password error"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Sign Up",
        "description": "Sign Up",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Login",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "Jhon Doe"
                },
                "email": {
                  "type": "string",
                  "example": "example@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully obtained.",
            "schema": {
              "type": "object",
              "properties": {
                "statusMessage": {
                  "type": "string",
                  "example": "sign up successfully"
                },
                "token": {
                  "type": "string",
                  "example": "token"
                },
                "user": {
                  "$ref": "#/definitions/User"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Validation errors"
                },
                "missingFields": {
                  "type": "array",
                  "example": [
                    "missingFields"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "User with this email already exists",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "User with this email already exists"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/refresh": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh Token",
        "description": "Refreshes the access token",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Token successfully refreshed.",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "new_token"
                },
                "statusMessage": {
                  "type": "string",
                  "example": "refresh successfully"
                },
                "user": {
                  "$ref": "#/definitions/User"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid Token",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid Token"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Server error"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get All users",
        "description": "Get All users",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Search by user first name",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully obtained.",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create user",
        "description": "Create user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Adding new user.",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "Terry"
                },
                "lastName": {
                  "type": "string",
                  "example": "Medhurst"
                },
                "gender": {
                  "type": "string",
                  "enum": [
                    "male",
                    "female",
                    "other"
                  ]
                },
                "email": {
                  "type": "string",
                  "example": "example@example.com"
                },
                "phone": {
                  "type": "string",
                  "example": "+63 791 675 8914"
                },
                "image": {
                  "type": "string",
                  "example": "https://example.org/example.png"
                },
                "password": {
                  "type": "string",
                  "example": "password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully obtained.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Create user successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Validation errors"
                },
                "missingFields": {
                  "type": "array",
                  "example": [
                    "missingFields"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "User with this email already exists",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User with this email already exists"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user",
        "description": "Get user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully obtained.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Bad request"
                },
                "error": {
                  "type": "string",
                  "example": "errorMessage"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user",
        "description": "Update user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Adding new user.",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "Terry"
                },
                "lastName": {
                  "type": "string",
                  "example": "Medhurst"
                },
                "gender": {
                  "type": "string",
                  "enum": [
                    "male",
                    "female",
                    "other"
                  ]
                },
                "phone": {
                  "type": "string",
                  "example": "+63 791 675 8914"
                },
                "image": {
                  "type": "string",
                  "example": "https://example.org/example.png"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully obtained.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Update user successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Validation errors"
                },
                "missingFields": {
                  "type": "array",
                  "example": [
                    "missingFields"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user",
        "description": "Delete user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully deleted.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/{id}/posts": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get All posts by ID User",
        "description": "Get All posts by ID User",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Post successfully obtained.",
            "schema": {
              "$ref": "#/definitions/PostsByUserId"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Bad request"
                },
                "error": {
                  "type": "string",
                  "example": "errorMessage"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Posts not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Posts not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "Create post",
        "description": "Create post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Adding new post.",
            "schema": {
              "type": "object",
              "properties": {
                "body": {
                  "type": "string",
                  "example": "text post"
                },
                "title": {
                  "type": "string",
                  "example": "title post"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post successfully obtained.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Post added successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Validation errors"
                },
                "missingFields": {
                  "type": "array",
                  "example": [
                    "missingFields"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/posts/": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get All posts",
        "description": "Get All posts",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Post successfully obtained.",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/posts/{id}": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get post",
        "description": "Get post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Post successfully obtained.",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Bad request"
                },
                "error": {
                  "type": "string",
                  "example": "errorMessage"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Post not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Post not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Posts"
        ],
        "summary": "Delete post",
        "description": "Delete post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Post ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Post successfully deleted.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Post deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Post not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Post not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/posts/{id}/comments": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Get All comments by Post ID ",
        "description": "Get All comments by Post ID ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Post ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Post Comments obtained.",
            "schema": {
              "$ref": "#/definitions/CommentsByIdPost"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/comments/": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Get All comments",
        "description": "Get All comments",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Comments successfully obtained.",
            "schema": {
              "$ref": "#/definitions/Comments"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/comments/{id}": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Get comment",
        "description": "Get comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Comment successfully obtained.",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          },
          "404": {
            "description": "Comment not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Comment not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Comments"
        ],
        "summary": "Delete comment",
        "description": "Delete comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "description": "ID of the comment to delete",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Comment successfully deleted.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Comment not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Comment not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/comments/add/{id}": {
      "post": {
        "tags": [
          "Comments"
        ],
        "summary": "Create comment",
        "description": "Create comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Adding new comment.",
            "schema": {
              "type": "object",
              "properties": {
                "body": {
                  "type": "string",
                  "example": "text comment"
                },
                "userId": {
                  "type": "string",
                  "example": "user ID"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comment successfully obtained.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Added successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Validation errors"
                },
                "missingFields": {
                  "type": "array",
                  "example": [
                    "missingFields"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "648edfa104490fd490173125"
        },
        "firstName": {
          "type": "string",
          "example": "Terry"
        },
        "lastName": {
          "type": "string",
          "example": "Medhurst"
        },
        "gender": {
          "type": "string",
          "enum": [
            "male",
            "female",
            "other"
          ]
        },
        "email": {
          "type": "string",
          "example": "example@example.com"
        },
        "phone": {
          "type": "string",
          "example": "+63 791 675 8914"
        },
        "image": {
          "type": "string",
          "example": "https://example.org/example.png"
        },
        "password": {
          "type": "string",
          "example": "string"
        }
      }
    },
    "Users": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        },
        "page": {
          "type": "number",
          "example": 0
        },
        "totalPages": {
          "type": "number",
          "example": 0
        },
        "total": {
          "type": "number",
          "example": 0
        }
      }
    },
    "Post": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "648f037fbcec46ba8e03dd75"
        },
        "title": {
          "type": "string",
          "example": "His mother had always taught him"
        },
        "body": {
          "type": "string",
          "example": "His mother had always taught him not to ever think ..."
        },
        "userId": {
          "type": "string",
          "example": "649151c2a5a13144c3ed7c68"
        }
      }
    },
    "Posts": {
      "type": "object",
      "properties": {
        "posts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Post"
          }
        },
        "page": {
          "type": "number",
          "example": 0
        },
        "totalPages": {
          "type": "number",
          "example": 0
        },
        "total": {
          "type": "number",
          "example": 0
        }
      }
    },
    "PostsByUserId": {
      "type": "object",
      "properties": {
        "posts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Post"
          }
        }
      }
    },
    "Comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "648f37ef979165668fdf8d18"
        },
        "body": {
          "type": "string",
          "example": "TEST"
        },
        "postId": {
          "type": "string",
          "example": "648f037fbcec46ba8e03dd75"
        },
        "creator": {
          "type": "object",
          "properties": {
            "firstName": {
              "type": "string",
              "example": "Mercedes"
            },
            "lastName": {
              "type": "string",
              "example": "null"
            },
            "image": {
              "type": "string",
              "example": "null"
            },
            "userId": {
              "type": "string",
              "example": "648ef02a90dd4510355d5718"
            }
          }
        }
      }
    },
    "Comments": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Comment"
          }
        },
        "page": {
          "type": "number",
          "example": 0
        },
        "totalPages": {
          "type": "number",
          "example": 0
        },
        "total": {
          "type": "number",
          "example": 0
        }
      }
    },
    "CommentsByIdPost": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Comment"
          }
        }
      }
    }
  }
}